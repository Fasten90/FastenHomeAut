#!/usr/bin/env python
import sys, os, re
from subprocess import check_output, Popen, PIPE


# For git diff
def run(command):
    p = Popen(command.split(), stdout=PIPE, stderr=PIPE)
    p.wait()
    return p.returncode, p.stdout.read().strip().split(), p.stderr.read()


# Collect the parameters
commit_msg_filepath = sys.argv[1]
# Figure out which branch we're on
#branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()
#print "commit-msg: On branch '%s'" % branch

# Read commit message
with open(commit_msg_filepath, 'r') as f:
    content = f.read()

# Commit message shall be start with "# "
if not content.startswith("# "):
    print("commit-msg: ERROR! The commit message must start with  \"# \"")
    sys.exit(1)

# Commit message length
if len(content) < 8:
    print("commit-msg: ERROR! The commit message is too short, required minimum 8 character!")
    sys.exit(1)

# Check "DO NOT COMMIT" in changes
_, files_modified, _= run("git diff-index --name-only --cached HEAD")

for fname in files_modified:
    print("Modified file: {}".format(fname))
    with open(fname, 'r') as f:
        file_changes = f.read()
        if "DO NOT COMMIT" in file_changes or "DO_NOT_COMMIT" in file_changes:
            print("commit-changes: ERROR! There are \"DO NOT COMMIT\" in changes!")
            sys.exit(1)

sys.exit(0)
