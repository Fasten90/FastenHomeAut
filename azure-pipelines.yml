# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master


jobs:

# Win
- job: build_win
  pool:
    vmImage: 'windows-2019'
  displayName: 'Build for Windows'
  steps:
  - script: |
      echo 'Start Windows build pipeline'
      :: Print the gcc version
      gcc --version
      :: ?? Install a CMake 3.0.2 version
      :: Print the CMake version
      echo 'Start CMake'
      cmake --version
    
      :: TODO: Perhaps does not need
      echo 'List actual directory'
      cd
      dir
      
      mkdir Out
      cd Out
      mkdir CMakeBuild
      cd CMakeBuild
      
      echo 'Actual directory'
      cd
      
      :: Call the CMake.
      :: Normally: "- cmake" or "-cmake .." used
      :: Note: As experience, default the mingw used
      ::cmake ../..
      
      :: MSVC - NMake
      ::cmake -G "NMake Makefiles" ../..
      
      :: GCC - MinGW
      :: At Azure win VM there is sh in installed GIT - shall skip
      cmake CC=gcc -G "MinGW Makefiles" -DCMAKE_SH="CMAKE_SH-NOTFOUND" ../..
      :: -D"CMAKE_MAKE_PROGRAM:FILEPATH=make.exe" -D"CMAKE_C_COMPILER:FILEPATH=gcc.exe" -D"CMAKE_CXX_COMPILER:FILEPATH=g++.exe" CC=gcc -G "MinGW Makefiles"
      
      echo 'List actual directory'      
      dir
      
      :: Build the project.
      echo 'Start Make'
      make
      
      :: Check the results
      echo 'Finished compile-ing'
      dir
      
      :: Run
      echo 'Execute...'
      FastenHomeAut.exe
      echo 'Finished executing'

# Linux
- job: build_linux
  pool:
    vmImage: 'ubuntu-latest'
  displayName: 'Build for Linux'
  steps:
  - script: |

      echo 'Start Linux build pipeline'
      # Print the gcc version.

      gcc --version
      #  Install a CMake 3.0.2 version.
      #- apt-get update -qq
      #- apt-get install cmake -y
      #  Alternatively you could install a CMake 3.2.2 version through PPA repository.
      apt-get update -qq
      apt-get install software-properties-common -y
      # Add PPA repository.
      echo 'deb http://ppa.launchpad.net/george-edison55/cmake-3.x/ubuntu trusty main' | tee -a /etc/apt/sources.list.d/cmake.list
      apt-get update -qq
      apt-get install cmake -y --force-yes
      # Print the CMake version.
      echo 'Start CMake'

      cmake --version

      # TODO: Perhaps does not need
      #- cd $BITBUCKET_CLONE_DIR
      echo 'List actual directory'
      pwd
      # Win: cd
      ls

      mkdir Out
      cd Out
      mkdir CMakeBuild
      cd CMakeBuild
      pwd

      # Call the CMake.
      # Normally: "- cmake" or "-cmake .." used
      cmake ../..
      #- cmake CC=gcc ../..
      # -D"CMAKE_MAKE_PROGRAM:FILEPATH=make.exe" -D"CMAKE_C_COMPILER:FILEPATH=gcc.exe" -D"CMAKE_CXX_COMPILER:FILEPATH=g++.exe" CC=gcc -G "MinGW Makefiles"

      # Build the project.
      echo 'Start Make'
      make

      # Check the results
      echo 'Finished compile-ing'
      ls

      # Run
      echo 'Execute...'
      ./FastenHomeAut
      echo 'Finished executing'
